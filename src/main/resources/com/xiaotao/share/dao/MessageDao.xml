<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xiaotao.share.dao.MessageDao">

    <sql id="table">message_t</sql>
    <sql id="messageColumns">
        id,from_id,to_id,content,created_date,conversation_id,has_read
    </sql>

    <insert id="insertMessage">
      insert into
      <include refid="table"/>
      (<include refid="messageColumns"/>)
      value (#{id},#{fromId},#{toId},#{content},now(),#{conversationId},#{hasRead})
    </insert>

    <select id="selectMessageByFromId" resultType="message">
        select
        id,from_id as fromId,to_id as toId,content,created_date as createdDate,
        conversation_id as conversationId,has_read as hasRead
        from
        <include refid="table"/>
        where from_id = #{fromId}
    </select>

    <select id="selectMessageByToId" resultType="message">
        select
        id,from_id as fromId,to_id as toId,content,created_date as createdDate,
        conversation_id as conversationId,has_read as hasRead
        from
        <include refid="table"/>
        where to_id = #{toId}
    </select>


    <resultMap id="messageMap" type="message">
        <id property="id" column="id"/>
        <result property="fromId" column="from_id"/>
        <result property="toId" column="to_id"/>
        <result property="content" column="content"/>
        <result property="createdDate" column="created_date"/>
        <result property="conversationId" column="conversation_id"/>
        <result property="hasRead" column="has_read"/>
        <association property="user" column="from_id" javaType="user"
                     select="com.xiaotao.share.dao.UserDao.selectUserById"/>
    </resultMap>
    <select id="selectMessageByConversationId" resultMap="messageMap">
        select
        id,from_id,to_id,content,created_date,
        conversation_id,has_read
        from
        <include refid="table"/>
        where conversation_id = #{conversationId}
    </select>

    <select id="selectCountUnreadByToName" resultType="_int">
        select
        count(1)
        from
        <include refid="table"/>
        where
        to_id = #{userId} and has_read = 0
    </select>

    <update id="setHasRead">
        update
        <include refid="table"/>
        set has_read=1
        <where>
            <foreach collection="list" item="id">
                or id=#{id}
            </foreach>
        </where>
    </update>

    <delete id="deleteMessageById">
        delete from
        <include refid="table"/>
        where
        id = #{messageId}
    </delete>

    <delete id="deleteMessageByConversationId">
        delete from
        <include refid="table"/>
        where
        conversation_Id = #{conversationId}
    </delete>


    <!--conversation-->
    <resultMap id="conversationMap" type="conversation">
        <id property="conversationId" column="conversation_id"/>
        <result property="createdDate" column="created_date"/>
        <result property="content" column="content"/>
        <result property="messageNum" column="messageNum"/>
        <association property="user" column="from_id" javaType="user"
                     select="com.xiaotao.share.dao.UserDao.selectUserById"/>
    </resultMap>
    <select id="selectConversationByConversationIdSet" resultMap="conversationMap">
        select
        conversation_id,from_id,created_date,content,count(id) as messageNum
        from
        <include refid="table"/>
        <where>
            <foreach collection="set" item="conversationId">
                or conversation_id=#{conversationId}
            </foreach>
        </where>
        GROUP BY
        conversation_id
        order by
        created_date desc
    </select>
</mapper>